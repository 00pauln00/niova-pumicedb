name: Common CI Setup
description: Sets up environment and dependencies for Niova-Pumicedb CI workflows.
runs:
    using: "composite"
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: apt update
      run: sudo apt update
      shell: bash

    - name: dpkg / rpm prep
      run: sudo -E apt-get install -y uuid-dev uuid libuuid1 libgcrypt20 openssl libssl-dev `apt-cache search librocksdb | awk '{print $1}'` uncrustify libasan5 libtsan0
      shell: bash

# Install golang
    - name: Install golang 1.20.3
      run: sudo rm -rf /usr/bin/go /bin/go &&
           wget https://golang.org/dl/go1.20.3.linux-amd64.tar.gz &&
           mkdir -p /home/runner/work/go &&
           tar -C /home/runner/work/go -xzf go1.20.3.linux-amd64.tar.gz &&
           sudo ln -s /home/runner/work/go/go/bin/go /bin/ &&
           go version
      shell: bash

# Install python libraries
    - name: Install python libraries
      run:  pip3 install setuptools wheel func_timeout sockets psutil dpath jmespath
      shell: bash

# Install Ansible
    - name: Install Ansible
      run:  pip3 install ansible==9.2
      shell: bash

    - name: Build Dir
      run:  mkdir -p /home/runner/work/niovad/niovad/build_dir/
      shell: bash

#
#### Submodule Bits
# niova-pumicedb submodule init
    - name: submodule init
      run: git submodule init && git submodule update
      shell: bash

# build backtrace submodule
    - name: build libbacktrace
      run: cd modules/libbacktrace/ && ./configure && make && sudo make install
      shell: bash

# niova-raft submodule init
    - name: submodule init (niova-raft)
      run: cd modules/niova-raft && git submodule init && git submodule update
      shell: bash

# niova-core submodule init
    - name: submodule init (niova-core)
      run: cd modules/niova-raft/modules/niova-core && git submodule init && git submodule update
      shell: bash

# build niova-core
    - name: build niova-core
      run: cd modules/niova-raft/modules/niova-core/ && ./prepare.sh &&
        ./configure --enable-devel --enable-asan --prefix=/home/runner/work/niovad/niovad/build_dir/ &&
        make -j 4 && make -j 4 check && make install
      shell: bash

# build niova-raft
    - name: build niova-raft
      run: cd modules/niova-raft/ && ./prepare.sh &&
        ./configure --enable-devel --enable-asan --prefix=/home/runner/work/niovad/niovad/build_dir/ --with-niova=/home/runner/work/niovad/niovad/build_dir/ &&
        make -j 4 && make -j 4 check && make install
      shell: bash
#
#### End Submodule Bits
#
    - name: make
      run: ./prepare.sh &&
           ./configure --enable-devel --enable-asan --with-niova=/home/runner/work/niovad/niovad/build_dir/ --prefix=/home/runner/work/niovad/niovad/build_dir/ &&
           make clean && make && make install
      shell: bash
      env:
        LD_LIBRARY_PATH: /home/runner/work/niovad/niovad/build_dir/lib

    - name: Build go applications using makefile
      run: ls -al &&
           which go &&
           cd go &&
           make -e DIR=/home/runner/work/niovad/niovad/build_dir/
      shell: bash

# Checkout holon repo
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
       repository: 00pauln00/holon
       ref: covid_app_recipe_fixes
       path: ./holon

    - name: Copy holon repo
      run: cp -r ./holon /home/runner/work/niovad/niovad/build_dir/
      shell: bash

    - name: Create log directory for storing holon logs
      run: mkdir  /home/runner/work/niovad/niovad/holon_log
      shell: bash

# GCOV Setup
    - name: Create dir for cover data counters, metadata to be placed
      run: mkdir  /home/runner/work/niovad/niovad/code_cov &&
           export GOCOVERDIR=/work/niovad/niovad/code_cov
      shell: bash
